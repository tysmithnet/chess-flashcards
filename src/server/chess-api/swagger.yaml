swagger: "2.0"
info:
  description: "This is an API for chess games, openings, and moves"
  version: "1.0.0"
  title: "chess-flashcards"
host: "localhost:5000"
basePath: "/api/v1"
schemes:
- "https"
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /moves:
    get:
      summary: "Get moves for the given position"
      parameters: 
      - name: "fen"
        in: "query"
        description: "FEN of the position to find moves for"
        type: "string"
        required: true
      - name: "flags"
        in: "query"
        description: "Restrict the moves to certain types"
        type: "array"
        items:
          type: "string"
          enum:
          - "check"
          - "checkmate"
          - "stalemate"
          - "capture"
          - "enpessant"
          - "castle"
      responses:
        200:
          description: "Successfully found moves"
          schema:
            type: "array"
            items:
              $ref: '#/definitions/Move'
        400:
          description: "Position is not valid"
  /openings:
    get:
      summary: "Get all ECO openings"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfully got all ECO openings"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Opening"
  /openings/{id}:
    get:
      summary: "Get an opening and its variants by id"
      parameters: 
      - name: "id"
        in: "path"
        description: "ECO id e.g. C42"
        required: true
        type: "string"
        pattern: "[A-E][0-9]{2}"
      responses:
        200:
          description: "Successfully found requested opening"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Opening"
        400:
          description: "Invalid ECO id supplied"
        404:
          description: "Opening not found"
  /openings/search:
    get:
      summary: "Fuzzy search for openings"
      parameters:
      - name: "term"
        in: "query"
        description: "Search term to use in search"
        type: "string"
        required: true
      responses:
        200:
          description: "Search completed successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Opening"
definitions:
  Move:
    type: "object"
    required:
    - "piece"
    - "dst"
    - "src"
    properties:
      piece:
        type: "string"
        format: "[PNBRQKpnbrqk]"
      src:
        type: "string"
        format: "[a-g][1-8]"
      dst:
        type: "string"
        format: "[a-g][1-8]"
      is_check:
        type: "boolean"
      is_mate:
        type: "boolean"
      is_stalemate:
        type: "boolean"
      is_enpessant:
        type: "boolean"
      is_castle:
        type: "boolean"
      captured_piece:
        type: "string"
        format: "[PNBRQKpnbrqk]"
  Opening:
    type: "object"
    required:
    - "name"
    - "id"
    - "moves"
    properties:
      name: 
        type: "string"
      id: 
        type: "string"
        pattern: "[A-E][0-9]{2}"
      moves:
        type: "array"
        items:
          $ref: "#/definitions/Move"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"