# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.move import Move  # noqa: F401,E501
from swagger_server import util


class FenRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, fen: str=None, moves: List[Move]=None):  # noqa: E501
        """FenRequest - a model defined in Swagger

        :param fen: The fen of this FenRequest.  # noqa: E501
        :type fen: str
        :param moves: The moves of this FenRequest.  # noqa: E501
        :type moves: List[Move]
        """
        self.swagger_types = {
            'fen': str,
            'moves': List[Move]
        }

        self.attribute_map = {
            'fen': 'fen',
            'moves': 'moves'
        }

        self._fen = fen
        self._moves = moves

    @classmethod
    def from_dict(cls, dikt) -> 'FenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FenRequest of this FenRequest.  # noqa: E501
        :rtype: FenRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fen(self) -> str:
        """Gets the fen of this FenRequest.

        The position on the board to apply the moves to described in FEN notation  # noqa: E501

        :return: The fen of this FenRequest.
        :rtype: str
        """
        return self._fen

    @fen.setter
    def fen(self, fen: str):
        """Sets the fen of this FenRequest.

        The position on the board to apply the moves to described in FEN notation  # noqa: E501

        :param fen: The fen of this FenRequest.
        :type fen: str
        """

        self._fen = fen

    @property
    def moves(self) -> List[Move]:
        """Gets the moves of this FenRequest.

        The moves to apply to the position on the board  # noqa: E501

        :return: The moves of this FenRequest.
        :rtype: List[Move]
        """
        return self._moves

    @moves.setter
    def moves(self, moves: List[Move]):
        """Sets the moves of this FenRequest.

        The moves to apply to the position on the board  # noqa: E501

        :param moves: The moves of this FenRequest.
        :type moves: List[Move]
        """

        self._moves = moves
